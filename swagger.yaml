swagger: '2.0'

info:
  version: "0.0.1"
  title: OSU Events API
  
consumes:
  - application/json  

paths:
  /events:
    get:
      tags:
        - events
      description: "Get all events. Can be filtered by parameters to specify format."
      produces:
        - application/json
        - text/csv
        - text/calendar
      parameters:
        - name: format
          in: query
          description: > 
            Specify format of successful response. Valid options are ics or csv. 
            The response will be JSON if this parameter isn't used.
          required: false
          type: string
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObjects"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

    post:
      tags:
        - events
      description: "Add a new event"
      produces:
        - application/json
      parameters:
        - name: event
          in: body
          description: "JSON Representation of an event."
          required: true
          schema:
            $ref: "#/definitions/ResultObject"
      responses:
        201:
          description: "Event successfully created."
          schema:
            $ref: "#/definitions/ResultObject"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict: Client generated ID already exists or type is invalid."
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

  /events/{eventID}:
    get:
      tags:
        - events
      description: "Get a single event by ID"
      produces:
        - application/json
      parameters:
        - name: eventID
          in: path
          description: "ID of an event"
          required: true
          type: integer
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObject"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"        

    patch:
      tags:
        - events
      description: "Update an existing event."
      produces:
        - application/json
      parameters:
        - name: eventID
          in: path
          description: "ID of an event"
          required: true
          type: integer
        - name: event
          in: body
          description: "JSON Representation of an event."
          required: true
          schema:
            $ref: "#/definitions/ResultObject"
      responses:
        200:
          description: "Event successfully updated."
          schema:
            $ref: "#/definitions/ResultObject"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict: Type and/or id do not match server's endpoint"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
        - events
      description: "Delete an existing event."
      parameters:
        - name: eventID
          in: path
          description: "ID of an event"
          required: true
          type: integer
      responses:
        204:
          description: "Event successfully deleted."
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

definitions:
  ResultObject:
    properties:
      data:
        $ref: "#/definitions/ResourceObject"

  ResultObjects:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/ResourceObject"
        
  ResourceObject:
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        $ref: "#/definitions/Attributes"

  Attributes:
    properties:
      eventID:
        type: string
      title:
        type: string
      description:
        type: string
      location:
        type: string
      room:
        type: string
      address:
        type: string        
      city:
        type: string
      state:
        type: string
      url:
        type: string
      photoURL:
        type: string
      ticketURL:
        type: string
      facebookURL:
        type: string
      cost:
        type: string
      hashtag:
        type: string
      keywords:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          type: string
      group:
        type: string
      allowsReviews:
        type: boolean
      sponsored:
        type: boolean
      venuePageOnly:
        type: boolean
      excludeFromTrending:
        type: boolean
      visibility:
        type: string
      department:
        type: string
      filters:
        type: array
        items:
          $ref: "#/definitions/Filters"
      customFields:
        type: array
        items:
          $ref: "#/definitions/CustomFields"
      instances:
        type: array
        items:
          $ref: "#/definitions/EventInstance"
    
  CustomFields:
    properties:
      field:
        type: string
      value:
        type: string
        
  Filters:
    properties:
      filter:
        type: string
      values:
        type: array
        items:
          type: string

  EventInstance:
    properties:
      id:
        type: string
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time

  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      developerMessage:
        type: string
      userMesage:
        type: string
      code:
        type: integer
      details:
        type: string