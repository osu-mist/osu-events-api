swagger: '2.0'
info:
  title: OSU Events API
  description: Calendar event management for events.oregonstate.edu
  version: "1.0.0"
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/osu-events-api
host: api.oregonstate.edu
schemes:
  - https
basePath: /v1/calendar
consumes:
  - application/json
produces:
  - application/json
paths:
  /events:
    get:
      tags:
        - events
      description: "Get all events. Can be filtered by parameters to specify format."
      # TODO: add parameters
      #parameters:
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/EventsResultObject"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - events
      description: "Add a new event"
      parameters:
        - name: event
          in: body
          description: "JSON Representation of an event."
          required: true
          schema:
            $ref: "#/definitions/EventResultObject"
      responses:
        201:
          description: "Event successfully created."
          schema:
            $ref: "#/definitions/EventResultObject"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /events/{eventID}:
    get:
      tags:
        - events
      description: "Get a single event by ID"
      parameters:
        - name: eventID
          in: path
          description: "ID of an event"
          required: true
          type: string
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/EventResultObject"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

    put:
      tags:
        - events
      description: "Update an existing event."
      parameters:
        - name: eventID
          in: path
          description: "ID of an event"
          required: true
          type: integer
        - name: event
          in: body
          description: "JSON Representation of an event."
          required: true
          schema:
            $ref: "#/definitions/EventResultObject"
      responses:
        200:
          description: "Event successfully updated."
          schema:
            $ref: "#/definitions/EventResultObject"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
        - events
      description: "Delete an existing event."
      parameters:
        - name: eventID
          in: path
          description: "ID of an event"
          required: true
          type: integer
      responses:
        204:
          description: "Event successfully deleted."
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /feed:
    get:
      tags:
        - events
      description: "Events feed for backend calendar vendor event ingress."
      produces:
        - text/csv
      responses:
        200:
          description: "Successful response"
          schema:
            type: string
        500:
          description: "Internal Server Error"
          schema:
            type: string
  /locations:
    get:
      tags:
        - locations
      description: "Get locations that an event can be assigned to."
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/LocationsResultObject"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /locations/{locationID}:
    get:
      tags:
        - locations
      description: "Get a location by ID."
      parameters:
        - name: locationID
          in: path
          description: "ID of an location"
          required: true
          type: string
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/LocationResultObject"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /groups:
    get:
      tags:
        - groups
      description: "Get groups."
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/GroupsResultObject"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /groups/{groupID}:
    get:
      tags:
        - groups
      description: "Get a group by ID."
      parameters:
        - name: groupID
          in: path
          description: "ID of an group"
          required: true
          type: string
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/GroupResultObject"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /departments:
    get:
      tags:
        - departments
      description: "Get departments."
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/DepartmentsResultObject"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /departments/{departmentID}:
    get:
      tags:
        - departments
      description: "Get a department by ID."
      parameters:
        - name: departmentID
          in: path
          description: "ID of an department"
          required: true
          type: string
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/DepartmentResultObject"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"

definitions:
  EventResultObject:
    properties:
      data:
        $ref: "#/definitions/EventResourceObject"
  EventsResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/EventResourceObject"
  EventResourceObject:
    properties:
      id:
        type: string
        example: 93f76811-adde-475f-90a2-e8a9c9aac680
        description: Version 4 UUID
      type:
        type: string
        example: events
      attributes:
        properties:
          title:
            type: string
          description:
            type: string
          locationID:
            type: string
          room:
            type: string
          address:
            type: string
          city:
            type: string
          county:
            type: string
          state:
            type: string
          eventUrl:
            type: string
          photoURL:
            type: string
          facebookURL:
            type: string
          ticketURL:
            type: string
          ticketCost:
            type: string
          hashtag:
            type: string
          keywords:
            type: array
            items:
              type: string
          tags:
            type: array
            items:
              type: string
          groupID:
            type: string
          allowsReviews:
            type: boolean
          sponsored:
            type: boolean
          venuePageOnly:
            type: boolean
          excludeFromTrending:
            type: boolean
          allowUserActivity:
            type: boolean
          allowUserInterest:
            type: boolean
          visibility:
            type: string
          departmentID:
            type: string
          contactName:
            type: string
          contactEmail:
            type: string
          contactPhone:
            type: string
          eventTypeID:
            type: string
          eventTopicID:
            type: string
          audienceID:
            type: string
          organizationID:
            type: string
          instances:
            type: array
            items:
              properties:
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
      links:
        $ref: "#/definitions/SelfLink"
  LocationResultObject:
    properties:
      data:
        $ref: "#/definitions/LocationResourceObject"
  LocationsResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/LocationResourceObject"
  LocationResourceObject:
    properties:
      id:
        type: string
        description: Location ID
      type:
        type: string
        example: locations
      attributes:
        properties:
          name:
            type: string
            description: Name of location
          #TODO: Add more fields
      links:
        $ref: "#/definitions/SelfLink"
  GroupResultObject:
    properties:
      data:
        $ref: "#/definitions/GroupResourceObject"
  GroupsResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/GroupResourceObject"
  GroupResourceObject:
    properties:
      id:
        type: string
        description: Group ID
      type:
        type: string
        example: groups
      attributes:
        properties:
          name:
            type: string
            description: Name of group
          #TODO: Add more fields
      links:
        $ref: "#/definitions/SelfLink"
  DepartmentResultObject:
    properties:
      data:
        $ref: "#/definitions/DepartmentResourceObject"
  DepartmentsResultObject:
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/DepartmentResourceObject"
  DepartmentResourceObject:
    properties:
      id:
        type: string
        description: Department ID
      type:
        type: string
        example: departments
      attributes:
        properties:
          name:
            type: string
            description: Name of department
          #TODO: Add more fields
      links:
        $ref: "#/definitions/SelfLink"
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self link of resource
  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      developerMessage:
        type: string
      userMesage:
        type: string
      code:
        type: integer
      details:
        type: string